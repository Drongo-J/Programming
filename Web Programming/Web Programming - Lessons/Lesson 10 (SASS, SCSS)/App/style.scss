// $primary_color:#00bfff;
// $secondary_color:#00ff7f;
// $myFont:Helvetica,sans-serif;
// $myFontSize:2em;

// h1{
//     color: $primary_color;
//     font-family: $myFont;
// }

// h2{
//     background-color: $secondary_color;
//     font-family: $myFont;
//     font-size: $myFontSize;
// }

@import "reset", "variables";

nav {
    ul {
        list-style: none;
    }

    li {
        display: inline-block;
    }

    a {
        display: block;
        padding: 6px 12px;
        text-decoration: none;
        color: $primary_color;
    }
}

@mixin color_base {
    color: deepskyblue;
    background-color: whitesmoke;
}

@mixin font_base {
    font-size: 3em;
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}

@mixin common_style {
    @include color_base;
    @include font_base;
    border: 4px solid red;
}

// @mixin base_style{
//     color: red;
//     font-size: 2em;
//     font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
// }

// h2{
//     @include common_style;
// }

// h1{   
//     @include base_style;
//     border-bottom: 3px solid black;
//     box-shadow: 10px 10px 10px orange;
// }

// h3{
//     @include base_style;
//     border-bottom: 3px solid deeppink;
//     box-shadow: 10px 10px 10px violet;
// }

@mixin base_style($color, $my_font) {
    color: $color;
    font-size: $my_font;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

h1 {
    @include base_style(#00ff3f, 4em);
    border-bottom: 3px solid black;
    box-shadow: 10px 10px 10px orange;
}

h3 {
    @include base_style(#ffab56, 2em);
    border-bottom: 3px solid deeppink;
    box-shadow: 10px 10px 10px violet;
}


.button-basic {
    border: none;
    padding: 15px 30px;
    text-align: center;
    font-size: 16px;
    cursor: pointer;
}


.button-submit {
    @extend .button-basic;
    background-color: deepskyblue;
}

.button-report {
    @extend .button-basic;
    box-shadow: 0 0 15px deeppink;
}


@function pow($base, $exponent) {
    $result: 1;
    @for $_ from 1 to $exponent+1 {
        $result: $result*$base;
    }
    @return $result;
}

@function invert($color,$amount:100%){
    $inverse:change-color($color,$hue:hue($color)+180);
    @return mix($inverse,$color,$amount);
}


h2 {
    margin-top: pow(5, 1)*1px;
}

h4{
    background-color: invert(deeppink,80%);
}